/* ==================================================　5-2-5 MENUが☓に=================================== */

/* ボタン外側※レイアウトによってpositionや形状は適宜変更してください */

.openbtn5 {
  position: relative;
  background: #666;
  cursor: pointer;
  width: 50px;
  height: 50px;
  border-radius: 5px;
}

/* ボタン内側 */

.openbtn5 span {
  display: inline-block;
  transition: all .4s;
  position: absolute;
}

.openbtn5 span:nth-of-type(1), .openbtn5 span:nth-of-type(3) {
  height: 2px;
  background: #fff;
  width: 62%;
  left: 10px;
}

.openbtn5 span:nth-of-type(1) {
  top: 13px;
}

.openbtn5 span:nth-of-type(2) {
  top: 19px;
  left: 11px;
  font-size: 0.6rem;
  text-transform: uppercase;
  color: #fff;
}

.openbtn5 span:nth-of-type(3) {
  top: 36px;
}

/* activeクラスが付与されると線が回転して×になり、Menu表記をしている2つ目の要素が透過して消える */

.openbtn5.active span:nth-of-type(1) {
  top: 18px;
  left: 18px;
  transform: translateY(6px) rotate(-45deg);
  width: 30%;
}

.openbtn5.active span:nth-of-type(2) {
  opacity: 0;
}

.openbtn5.active span:nth-of-type(3) {
  top: 30px;
  left: 18px;
  transform: translateY(-6px) rotate(45deg);
  width: 30%;
}

/* ========= レイアウトのためのCSS =============== */

body {
  /*background: #f3f3f3;*/
  /*padding: 20px;*/
}

a {
  /*color: #333;*/
  /*text-decoration: none;*/
}

.lead {
  /*margin: 20px 0 0 0;*/
}

.btn-block {
  /*width: 200px;*/
  /*padding: 30px;*/
}

/* ========= レイアウトのためのCSS =============== */

/* ==================================================じわっ=================================== */

.blur {
  animation-name: blurAnime;
  animation-duration: 1s;
  animation-fill-mode: forwards;
}

@keyframes blurAnime {
  from {
    filter: blur(10px);
    transform: scale(1.02);
    opacity: 0;
  }
  to {
    filter: blur(0);
    transform: scale(1);
    opacity: 1;
  }
}

.blurTrigger {
  opacity: 0;
}

/* ========= レイアウトのためのCSS =============== */

.flex {
  display: flex;
  flex-wrap: wrap;
}

.box {
  width: 220px;
  padding: 20px;
  margin: 0 20px 20px 20px;
  background: #666;
  color: #fff;
  box-sizing: border-box;
}

/* ==================================================スタート時は要素自体を透過0にするためのopacity:0;を指定する=================================== */

.box {
  opacity: 0;
}

/* ==================================================ふわっ=================================== */

.fadeUp {
  animation-name: fadeUpAnime;
  animation-duration: 0.5s;
  animation-fill-mode: forwards;
  opacity: 0;
}

@keyframes fadeUpAnime {
  from {
    opacity: 0;
    transform: translateY(100px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* アニメーションスタートの遅延時間を決めるCSS */

.delay-time02 {
  animation-delay: 0.2s;
}

.delay-time04 {
  animation-delay: 0.4s;
}

